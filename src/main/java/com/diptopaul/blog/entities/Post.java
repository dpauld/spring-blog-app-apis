package com.diptopaul.blog.entities;

import java.util.Date;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@NoArgsConstructor
@Getter
@Setter
@Entity
@Table(name="post")
public class Post {
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Integer id;
	
	@Column(name="title", length=150, nullable = false)
	private String title;
	
	@Column(length = 10000)
	private String content;
	
	private String imageName;
	
	private Date addedDate;
	
	@ManyToOne
	@JoinColumn(name="category_id")//JoinColumn is optional, if the name of the field variable and field name of the db name is same. Here we used the same name but we can name it differently.
	//If we don't create the db prior, the foreign key is mainly generated by the @ManyToOne relationship.
	//If you created the db at first and you don't want to name the private variable name same as the db table field name then you need to use @JoinColumn to specify the db table filed name and refer the foreign key
	private Category category;
	
	@ManyToOne
	//we decided not to use @JoinColumn here, cause 
	private User user;
	
}
